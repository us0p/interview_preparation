Multi Tier Architecture (n-tier architecture)
Is a client–server architecture in which the functions such as 
presentation, application processing, and data management are physically 
separated. By separating an application into tiers, developers obtain the 
option of changing or adding a specific layer, instead of reworking the 
entire application. It provides a model by which developers can create 
flexible and reusable applications.
The most general use of multi-tier architecture is the three-tier 
architecture. A three-tier architecture is typically composed of a 
presentation tier, an application tier, and a data storage tier.

- Presentation Tier: Is the topmost level of the application by which users
  can access directly such as webpage or Operating System GUI. The primary
  function of this layer is to translate the tasks and results to something
  that user can understand. It communicates with other tiers so that it 
  places the results to the browser/client tier and all other tiers in the 
  network.
- Application Tier (Business Logic, Logic Tier, or Middle Tier):
  Coordinates the application, processes the commands, makes logical 
  decisions, evaluation, and performs calculations. It controls an 
  application’s functionality by performing detailed processing. It also 
  moves and processes data between the two surrounding 
  layers.
- Data Tier: In this layer, information is stored and retrieved from the 
  database or file system. The information is then passed back for 
  processing and then back to the user. It includes the data persistence 
  mechanisms (database servers, file shares, etc.) and provides API 
  to the application tier which provides methods of managing the stored 
  data.
